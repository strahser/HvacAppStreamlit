{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "create_space_bound_curves",
  "ElementResolver": {
    "ResolutionMap": {
      "Polygon": {
        "Key": "Autodesk.DesignScript.Geometry.Polygon",
        "Value": "ProtoGeometry.dll"
      },
      "Autodesk.Curve": {
        "Key": "Autodesk.DesignScript.Geometry.Curve",
        "Value": "ProtoGeometry.dll"
      },
      "Autodesk.DesignScript.Geometry.Curve": {
        "Key": "Autodesk.DesignScript.Geometry.Curve",
        "Value": "ProtoGeometry.dll"
      },
      "Revit.Elements.Element": {
        "Key": "Revit.Elements.Element",
        "Value": "RevitNodes.dll"
      },
      "Autodesk.DesignScript.Geometry.Surface": {
        "Key": "Autodesk.DesignScript.Geometry.Surface",
        "Value": "ProtoGeometry.dll"
      },
      "Autodesk.Vector": {
        "Key": "Autodesk.DesignScript.Geometry.Vector",
        "Value": "ProtoGeometry.dll"
      },
      "Autodesk.DesignScript.Geometry.Vector": {
        "Key": "Autodesk.DesignScript.Geometry.Vector",
        "Value": "ProtoGeometry.dll"
      },
      "DSCore.Math": {
        "Key": "DSCore.Math",
        "Value": "DSCoreNodes.dll"
      },
      "DSCore.List": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      },
      "Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "PolyCurve": {
        "Key": "Autodesk.DesignScript.Geometry.PolyCurve",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 479,
      "SelectedString": "OST_MEPSpaces",
      "NodeType": "ExtensionNode",
      "Id": "b952f3976a794156af30b45660ef9ee7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8d33034585a64c00819a749c41f56dea",
          "Name": "Category",
          "Description": "Выбранная категория.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Все предопределенные категории."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "c3967ab139904fe8b1ed80f8b5d4fdb4",
      "Inputs": [
        {
          "Id": "2ad2cb328b974412b61eb49425b732b7",
          "Name": "Category",
          "Description": "Категория",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0911a9fc1844bc893e8cc48e7a884d0",
          "Name": "Elements",
          "Description": "Тип элемента.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Получение из модели всех элементов определенной категории."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "def get_space_curves(space)\n{\n//get all surfaces and z vectors\nget_surfaces = Revit.Elements.Element.Faces(space);\nget_vectors = Autodesk.DesignScript.Geometry.Surface.NormalAtParameter(get_surfaces, 0, 0);\nget_z_direction = Autodesk.Vector.Z(get_vectors);\nget_z_direction_round = DSCore.Math.Round(get_z_direction);\nb2 = get_z_direction_round == 1;\n//get filtred surface by vector direction\nfiltred_direction = DSCore.List.FilterByBoolMask(get_surfaces, b2);\nfiltred_direction_result = Dictionary.ValueAtKey(filtred_direction, \"in\");\nfiltred_direction_result_flatten = DSCore.List.Flatten(filtred_direction_result, -1);\nperimeter_curves = Autodesk.DesignScript.Geometry.Surface.PerimeterCurves(filtred_direction_result_flatten);\nperimeter_curves_flatten = DSCore.List.Flatten(perimeter_curves,-1);\npolyCurve1 = PolyCurve.ByJoinedCurves(perimeter_curves_flatten, 0.001);\nreturn perimeter_curves_flatten;\n};\n\n\n//get bound lines\nbound_lines = get_space_curves(spaces);\nlines_points = Autodesk.Curve.StartPoint(bound_lines);\n//get poligon from points\npolygon1 = Polygon.ByPoints(lines_points);\ncorner_points = Polygon.Corners(polygon1);\npolygon_center=Polygon.Center(polygon1);\n//create list of corner points and center points\n[spaces.Id,corner_points.X,corner_points.Y,corner_points.Z,polygon_center.X,polygon_center.Y];",
      "Id": "5a14986e25964ddeb8c6cf7845b1552a",
      "Inputs": [
        {
          "Id": "c5d59a87b9f04cb68948441b9bf0a1c3",
          "Name": "spaces",
          "Description": "spaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d8fba24b61a746cfa7ef61b5f95a308f",
          "Name": "",
          "Description": "bound_lines",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "abb8d050090e48a6938513d205ca1a85",
          "Name": "",
          "Description": "lines_points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99046110f19b43ccab9235a911a1d083",
          "Name": "",
          "Description": "polygon1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b2033004ea64a9eaf924b3a5e3d4908",
          "Name": "",
          "Description": "corner_points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "62a1b5714e27483dbcb32ee06ffc19fd",
          "Name": "",
          "Description": "polygon_center",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e594aba6b10941768672e89f858c547a",
          "Name": "",
          "Description": "Значение выражения в строке 28",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonStringNode, PythonNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "6b03c4adec1b4d5da6ac54bc586c6e01",
      "Inputs": [
        {
          "Id": "6e5fa843dd894ba588be2ee31d7feb42",
          "Name": "script",
          "Description": "Сценарий Python для запуска.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7dd75f31c0944c24b9fa34bb9b77f9fe",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5800c1c1eef9483dbb068b9921ccafbe",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86733a94fd3b42ca97812c1577513feb",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение сценария IronPython из строки."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.FileSystem.ReadText@var",
      "Id": "b580bf130cff47f9a1ec423dbd044f56",
      "Inputs": [
        {
          "Id": "9c94d44bf2934457a3aa558e78388088",
          "Name": "file",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bce2aeb4267143dc9763473be75c7755",
          "Name": "str",
          "Description": "Содержимое текстового файла.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Чтение текстового файла с выводом содержимого в виде строки.\n\nFileSystem.ReadText (file: var): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "2802eeb03b624322ae2e10b79297e16a",
      "Inputs": [
        {
          "Id": "a59e1251f7f64ca694867cf8d3b7d56f",
          "Name": "path",
          "Description": "Путь к файлу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "682cddaf26a74d469a593e1be428f8c6",
          "Name": "file",
          "Description": "Файловый объект",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание нового объекта на основе пути."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "create_space_bound_curves.py",
      "Id": "4b93fae0498e40b1a728ce31742646c1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5d03ceeaeaf4456791644b18495e834d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "92b3bcc5656e4dff9b0f1a3089828c30",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1f3a2194d7784c9187de839a965b2f95",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выбор между значениями true и false."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Copyright(c) 2017, Dimitar Venkov\r\n# @5devene, dimitar.ven@gmail.com\r\n# www.badmonkeys.net\r\n\r\nimport clr\r\n\r\nclr.AddReference('System.Windows.Forms')\r\nclr.AddReference('System.Drawing')\r\nfrom System.Drawing import Point, Color, Font\r\nfrom System.Windows.Forms import *\r\nfrom cStringIO import StringIO\r\n\r\nstr_file = StringIO()\r\nsize1 = [50, 50] #height, width\r\n\r\ndef tolist(obj1):\r\n\tif hasattr(obj1,\"__iter__\"): return obj1\r\n\telse: return [obj1]\r\n\r\ndef write_str(str1, GCL, str_file=str_file, size1=size1):\r\n\tln1 = len(str1)\r\n\tif ln1 > size1[1]:\r\n\t\tsize1[1] = ln1\r\n\t\r\n\tstr_file.write(\"%s%s\\n\" % (\"\".join(GCL), str1) )\r\n\r\ndef list2str(l1, writeInd, GCL=None, GCint=-1, size1=size1):\r\n\tif GCL is None:\r\n\t\tGCL = []\r\n\tGCint += 1\r\n\tGCL.append(None)\r\n\tfor i, x in enumerate(l1):\r\n\t\tGCL[GCint] = \"[%i] \" % i if writeInd else \"  \"\r\n\t\tif hasattr(x, \"Id\"): #is element\r\n\t\t\twrite_str(\"%s        %i\" % (x.ToString(), x.Id), GCL)\r\n\t\telif hasattr(x, \"__iter__\"):\r\n\t\t\tif not x:\r\n\t\t\t\twrite_str(\"Empty List\", GCL)\r\n\t\t\telse:\r\n\t\t\t\tlist2str(x, writeInd, GCL, GCint, size1)\r\n\t\telif x is None:\r\n\t\t\twrite_str(\"null\", GCL)\r\n\t\telse:\r\n\t\t\twrite_str(x.ToString(), GCL)\r\n\t\tsize1[0] += 19\r\n\tGCL.pop(GCint)\r\n\tGCint -= 1\r\n\r\nclass WatchBox(Form):\r\n\tdef __init__(self, t1):\r\n\t\tself.Text = \"SpringNodes: Expandable Watch Window\"\r\n\t\tself.BackColor = Color.FromArgb(40,40,40)\r\n\t\tself.ControlBox = False\r\n\t\tself.TopMost = True\r\n\t\tself.FormBorderStyle = FormBorderStyle.Sizable\r\n\t\tself.StartPosition = FormStartPosition.CenterScreen\r\n\t\tself.Resize += self.resize1\r\n\t\tself.text1 = None\r\n\r\n\t\tself.button1 = Button()\r\n\t\tself.button1.Text = 'Close'\r\n\t\tself.button1.Font = Font(\"Calibri\", 10)\r\n\t\tself.button1.AutoSize = True\r\n\t\tself.button1.Width = 200\r\n\t\tself.button1.ForeColor = Color.FromArgb(234,234,234)\r\n\t\tself.button1.Click += self.save\r\n\t\tself.Controls.Add(self.button1)\r\n\t\t\r\n\t\tself.box1 = RichTextBox()\r\n\t\tself.box1.Multiline = True\r\n\t\tself.box1.Location = Point(5, 5)\r\n\t\tself.box1.Font = Font(\"Calibri\", 12)\r\n\t\tself.box1.BackColor = Color.FromArgb(53,53,53)\r\n\t\tself.box1.ForeColor = Color.FromArgb(234,234,234)\r\n\t\tself.box1.DetectUrls = True\r\n\t\tself.box1.Text = t1\r\n\t\tself.Controls.Add(self.box1)\r\n\r\n\tdef adjust_controls(self, height1, width1):\r\n\t\tif height1 > 800:\r\n\t\t\theight1 = 800\r\n\t\t\tself.box1.ScrollBars = RichTextBoxScrollBars.Vertical\r\n\t\tif width1 < 23 : width1 = 23\r\n\t\tif width1 > 88: width1 = 88\r\n\t\tself.Width = 10 + (width1 + 2) * 9 #character width seems to vary between PCs\r\n\t\tself.Height = height1 + 90\r\n\t\tself.box1.Width = self.Width - 17\r\n\t\tself.box1.Height = self.Height - 80\r\n\t\tself.button1.Location = Point(self.Width/2 - 103, self.Height - 70)\r\n\t\r\n\tdef resize1(self, sender, event):\r\n\t\tif self.Width < 210: self.Width = 230\r\n\t\tif self.Height < 120: self.Height = 120\r\n\t\tself.box1.Width = self.Width - 17\r\n\t\tself.box1.Height = self.Height - 80\r\n\t\tself.button1.Location = Point(self.Width/2 - 103, self.Height - 70)\r\n\t\r\n\tdef save(self, sender, event):\r\n\t\tself.text1 = self.box1.Text\r\n\t\tself.Close()\r\n\r\nl1 = [] if IN[0] is None else tolist(IN[0])\r\nlist2str(l1, IN[1])\r\nstr_content = str_file.getvalue()\r\nstr_file.close()\r\n\r\nwidth1 = 100\r\nform = WatchBox(str_content)\r\nform.adjust_controls(*size1)\r\n\r\nApplication.Run(form)\r\nOUT = form.text1\r\nApplication.Exit()\r\nform.Dispose()",
      "VariableInputPorts": true,
      "Id": "ec45801328ab4cfba812fc4fffe52e36",
      "Inputs": [
        {
          "Id": "81b7532b7643473ab2263827e4cac290",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4150290becc94a58b3f88011e303ba22",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f1340bd1830c40e0bb6285232d782ddc",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "195756b2d89b43afa3de3a1684c10de2",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "254c0c0459bd45b0b3a9c84fd295fb99",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "79c26a26be8a4e89bc0d477530742c27",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выбор между значениями true и false."
    }
  ],
  "Connectors": [
    {
      "Start": "8d33034585a64c00819a749c41f56dea",
      "End": "2ad2cb328b974412b61eb49425b732b7",
      "Id": "01fe967fcf80470da3e1be497a5fbbfb"
    },
    {
      "Start": "a0911a9fc1844bc893e8cc48e7a884d0",
      "End": "c5d59a87b9f04cb68948441b9bf0a1c3",
      "Id": "b0af0eb2f3b44a399d1666a4c5507688"
    },
    {
      "Start": "e594aba6b10941768672e89f858c547a",
      "End": "5800c1c1eef9483dbb068b9921ccafbe",
      "Id": "cd0fa21c16f1483d89fe0f8e4f878777"
    },
    {
      "Start": "86733a94fd3b42ca97812c1577513feb",
      "End": "81b7532b7643473ab2263827e4cac290",
      "Id": "3e588d0cf91446ed982ae20067616d74"
    },
    {
      "Start": "bce2aeb4267143dc9763473be75c7755",
      "End": "6e5fa843dd894ba588be2ee31d7feb42",
      "Id": "a4a97fee3d744a2db23fc9384f0ff5bd"
    },
    {
      "Start": "682cddaf26a74d469a593e1be428f8c6",
      "End": "7dd75f31c0944c24b9fa34bb9b77f9fe",
      "Id": "4d10f6ea192048c7acf6f30a359820b4"
    },
    {
      "Start": "682cddaf26a74d469a593e1be428f8c6",
      "End": "9c94d44bf2934457a3aa558e78388088",
      "Id": "1771fb52742e4fca80df0167b4aeba2c"
    },
    {
      "Start": "5d03ceeaeaf4456791644b18495e834d",
      "End": "a59e1251f7f64ca694867cf8d3b7d56f",
      "Id": "a3184130a3644bf09e1b63f9e8c22f70"
    },
    {
      "Start": "1f3a2194d7784c9187de839a965b2f95",
      "End": "4150290becc94a58b3f88011e303ba22",
      "Id": "65e4d6f4fddc4a0084240243e01542bf"
    },
    {
      "Start": "79c26a26be8a4e89bc0d477530742c27",
      "End": "f1340bd1830c40e0bb6285232d782ddc",
      "Id": "e619e6429f6b420086a51c186f78f4e0"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.3.0.5885",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Default Camera",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": false,
        "Name": "Categories",
        "Id": "b952f3976a794156af30b45660ef9ee7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1477.5143625969276,
        "Y": -189.32687191699415
      },
      {
        "ShowGeometry": false,
        "Name": "All Elements of Category",
        "Id": "c3967ab139904fe8b1ed80f8b5d4fdb4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1658.3882367911449,
        "Y": -191.440972565629
      },
      {
        "ShowGeometry": false,
        "Name": "CreatePolygons",
        "Id": "5a14986e25964ddeb8c6cf7845b1552a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1870.4235641814989,
        "Y": -215.01221295380026
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script From String",
        "Id": "6b03c4adec1b4d5da6ac54bc586c6e01",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3374.9737533277885,
        "Y": 85.584997761849252
      },
      {
        "ShowGeometry": true,
        "Name": "FileSystem.ReadText",
        "Id": "b580bf130cff47f9a1ec423dbd044f56",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3146.21114885205,
        "Y": -130.3933050442335
      },
      {
        "ShowGeometry": true,
        "Name": "File From Path",
        "Id": "2802eeb03b624322ae2e10b79297e16a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2943.1986561471026,
        "Y": -58.431742748685394
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "4b93fae0498e40b1a728ce31742646c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2697.6092718376153,
        "Y": -50.004539490026445
      },
      {
        "ShowGeometry": false,
        "Name": "addindexes?",
        "Id": "92b3bcc5656e4dff9b0f1a3089828c30",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3561.9198035494237,
        "Y": -185.3506002448413
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "ec45801328ab4cfba812fc4fffe52e36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3803.0974682878609,
        "Y": -169.21392675521872
      },
      {
        "ShowGeometry": false,
        "Name": "reset?",
        "Id": "254c0c0459bd45b0b3a9c84fd295fb99",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3630.5410889517707,
        "Y": -56.396416493034735
      }
    ],
    "Annotations": [
      {
        "Id": "4496317ff36f4d3ba7d7a86f089065a5",
        "Title": "save to json",
        "Nodes": [
          "6b03c4adec1b4d5da6ac54bc586c6e01",
          "b580bf130cff47f9a1ec423dbd044f56",
          "2802eeb03b624322ae2e10b79297e16a",
          "4b93fae0498e40b1a728ce31742646c1"
        ],
        "Left": 2687.6092718376153,
        "Top": -183.3933050442335,
        "Width": 868.36448149017315,
        "Height": 413.97830280608275,
        "FontSize": 36.0,
        "InitialTop": -130.3933050442335,
        "InitialHeight": 360.97830280608275,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -738.96982461435,
    "Y": 438.95057109408754,
    "Zoom": 0.53782261109615126
  }
}